<style lang="less">
  .weui-panel {
    margin-top: 0;
    background-color: transparent;
  }

  .scroll-view {
    min-height: 100vh;
  }

  .searchbar .weui-search-bar__cancel-btn {
    color: #13C2C2;
  }

  .weui-panel__bd {
    background: white;
    border-bottom: 1px solid rgba(0, 0, 0, .1);
  }

  .weui-panel__hd {
    padding: 12px 16px;
    font-weight: normal;
    color: rgba(0, 0, 0, .6);

    &:after {
      left: 0;
    }
  }
</style>

<template>
  <view class="page">
    <view class="page__bd">
      <view class="weui-panel weui-panel_access">
        <view class="scroll-view">
          <searchbar ext-class="searchbar" bindconfirm="onSearch" bindclear="clearSearch"></searchbar>

          <view v-show="searchValue.length > 0" class="weui-panel__hd">关于 “{{searchValue}}” 的搜索结果</view>
          <view class="weui-panel__bd">
            <navigator
              url="/pages/articles/show/index?id={{article.id}}"
              v-for="article in articles"
              hover-class="weui-cell_active"
            >
              <list-item v-if="article.images.length === 0" :article="article"></list-item>
              <list-item1 v-else-if="article.images.length === 1" :article="article"></list-item1>
              <list-item2 v-else :article="article"></list-item2>
            </navigator>
          </view>

          <loading :show="loading"></loading>

          <view v-show="noMore" class="weui-loadmore weui-loadmore_line">
            <view class="weui-loadmore__tips weui-loadmore__tips_in-line">加载完毕</view>
          </view>
        </view>
      </view>
    </view>
  </view>
</template>

<script>
  import wepy from '@wepy/core';
  import unionBy from 'lodash/unionBy';
  import Debounce from 'lodash-decorators/debounce';
  import mapAuthState from '@/mixins/mapAuthState';
  import { matchImages } from '@/utils/utils';
  import * as services from './services';

  wepy.page({

    mixins: [mapAuthState],

    data: {
      articles: [],
      meta: {
        current_page: 0,
      },
      loading: false,
      searchValue: '',
    },

    computed: {
      noMore () {
        return (
          this.meta.current_page >= 1 &&
          this.meta.current_page >= this.meta.last_page
        );
      },
    },

    methods: {
      @Debounce(200)
      async refreshList () {
        if (this.loading) return;

        this.loading = true;

        try {
          const { data, meta } = await services.queryArticles({ q: this.searchValue });
          this.articles = this.mapMatchImages(data);
          this.meta = meta;
        } finally {
          this.loading = false;
        }

        wx.stopPullDownRefresh();
      },

      @Debounce(200)
      async appendList () {
        this.loading = true;

        try {
          const { data, meta } = await services.queryArticles({
            q: this.searchValue,
            page: this.meta.current_page + 1,
          });
          const articles = this.mapMatchImages(data);
          this.articles = unionBy(this.articles.concat(articles), 'id');
          this.meta = meta;
        } finally {
          this.loading = false;
        }
      },

      mapMatchImages (articles = []) {
        return articles.map(article => {
          const images = matchImages(article.content.markdown);

          if (images.length === 0 && article.preview) {
            images.unshift(article.preview);
          }

          article.images = images.slice(0, 3);
          return article;
        });
      },

      clearSearch () {
        this.searchValue = '';
        this.refreshList();
      },

      onSearch (e) {
        this.searchValue = e.$wx.detail.value;
        this.refreshList();
      },
    },

    created () {
      this.refreshList();
    },

    onShow () {
      if (this.unreadCount > 0) {
        return wx.setTabBarBadge({
          index: 1,
          text: this.unreadCount > 99 ? '99+' : String(this.unreadCount),
        });
      }

      wx.removeTabBarBadge({ index: 1 });
    },

    onPullDownRefresh () {
      this.refreshList();
    },

    onReachBottom () {
      if (this.noMore) return;

      this.appendList();
    },
  });
</script>

<config>
  {
    backgroundTextStyle: 'dark',
    enablePullDownRefresh: true,
    usingComponents: {
      loading: '~@/components/weui/loading/loading',
      searchbar: '~@/components/weui/searchbar/searchbar',
      'list-item': './components/list-item',
      'list-item1': './components/list-item1',
      'list-item2': './components/list-item2',
    },
  }
</config>
