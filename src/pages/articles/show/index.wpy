<style lang="less">
  page, .page, .page__bd {
    background-color: #fff;
    height: 100vh;
  }

  .page__bd {
    display: -webkit-flex;
    display: flex;
    flex-direction: column;
    justify-content: space-between;
  }

  .content-wrap {
    flex: 1;
    overflow: hidden;
  }

  .weui-loading__wrp {
    padding: 16px;
    text-align: center;
  }

  .content {
    .weui-article__head {
      padding: 12px 12px 0 12px;
      border-bottom: 1px solid #e5e5e5;
    }

    .weui-article__head .weui-article__h1 {
      margin-bottom: 10px;
      font-size: 20px;
    }

    .weui-article__head .weui-article__info {
      padding-bottom: 10px;
      font-size: 14px;
      color: #cecece;
      line-height: 1em;
      list-style: none;
      overflow: hidden;
    }

    .weui-article__head .weui-article__info__meta {
      float: left;
      padding-right: 1em;
    }

    .weui-article__head .weui-article__section {
      margin-bottom: 1em;
    }

    .weui-article__section {
      padding: 12px;
      color: #595959;
    }

    .weui-article__section image {
      margin: 4px 0;
    }

    .article-url {
      margin-top: 20px;
      background-color: #f2f2f2;
      padding: 5px 10px;
      font-size: 12px;
      border-radius: 5px;
    }

    .tags-wrap {
      margin-top: 30px;
      display: flex;
      flex-direction: row;
      justify-content: flex-start;
      align-items: center;
      line-height: 1;
    }

    .tags-wrap .icon-tags {
      margin-right: 8px;
    }

    .tags-wrap .icon-tags image {
      width: 20px;
      height: 20px;
    }

    .tags-wrap .tag {
      border: 1px solid #ffd591;
      border-radius: 4px;
      font-size: 12px;
      padding: 4px 8px;
      margin-right: 4px;
      color: #fa8c16;
      background: #fff7e6;
    }
  }

  .actions {
    display: flex;
    justify-content: center;
    margin: 16px auto;

    .action {
      margin: 0 8px;
    }
  }

  .actions image {
    width: 40px !important;
    height: 40px !important;
  }

  .comments {
    margin-top: 40px;
    border-top: 1px solid #d7d6dc;

    .comments-head {
      margin: 8px 12px;
      font-size: 14px;
    }
  }

  .top-comment {
    background-color: #fffbe6;
  }

  .form-wrap {
    border-top: 1px solid #d7d6dc;
    padding: 8px 10px;
    display: flex;
    flex-direction: row;
    justify-content: space-between;
    align-items: center;
  }

  .textarea {
    background-color: #efeff4;
    border-radius: 4px;
    font-size: 14px;
    flex: 1;
    padding: 8px;
  }

  .ios__textarea {
    padding: 0;
  }

  .form-actions-wrap {
    display: flex;
    flex-direction: row;
    justify-content: space-between;
    align-items: center;
    padding-left: 4px;

    .action {
      margin: 0 8px;

      &:last-child {
        margin-right: 0;
      }
    }

    .message {
      position: relative;
      display: flex;
      align-items: center;

      .badge {
        position: absolute;
        top: -6px;
        left: 14px;
      }
    }

    .submit {
      color: #13C2C2;
    }

    .disabled {
      color: rgba(0, 0, 0, 0.3);
    }
  }

  .form-actions-wrap image {
    width: 24px !important;
    height: 24px !important;
  }
</style>

<template>
  <view class="page">
    <view class="page__bd">
      <loading :show="fetchingArticle"></loading>
      <view class="content-wrap" @tap="onTextareaBlur">
        <scroll-view
          style="height: 100%"
          :scroll-y="true"
          :scroll-with-animation="true"
          :scroll-anchoring="true"
          :enable-back-to-top="true"
          :scroll-into-view="anchor"
          @scrolltolower="appendFetchComments"
        >
          <view class="content" id="content">
            <view class="weui-article__head">
              <view class="weui-article__h1">{{ article.title }}</view>
              <view class="weui-article__info">
                <view class="weui-article__info__meta">
                  {{ article.friendly_views_count }} 阅读
                </view>
                <view class="weui-article__info__meta">{{ article.friendly_comments_count }} 评论</view>
                <view class="weui-article__info__meta weui-media-box__info__meta_extra">
                  {{ article.created_at_timeago }}
                </view>
              </view>
            </view>
            <view class="weui-article__section">
              <htmltowxml
                :json="article.content.htmltowxml"
                :showLoading="false"
                :padding="0"
                highlightStyle="darcula"
              >
              </htmltowxml>
              <view class="article-url">文章链接：
                <navigator>https://www.einsition.com/articles/{{ id }}</navigator>
              </view>
              <view class="tags-wrap">
                <view class="icon-tags">
                  <image src="../../../static/png/tags_81x81.png"></image>
                </view>
                <view v-for="tag in article.tags" class="tag">
                  {{ tag.name }}
                </view>
              </view>
            </view>
          </view>

          <view class="actions">
            <view class="action">
              <authorized-check :authorized="authorized">
                <like-btn relation="article" :item="article"></like-btn>
              </authorized-check>
            </view>
            <view class="action">
              <authorized-check :authorized="authorized">
                <favorite-btn relation="article" :item="article"></favorite-btn>
              </authorized-check>
            </view>
          </view>

          <view class="comments" id="comments">
            <view class="comments-head">{{ meta.total }} 评论</view>
            <view
              v-for="comment in comments"
              :class="{ 'top-comment': comment.id === top_comment }"
              :id="'comment-'+comment.id"
            >
              <comment
                :comment="comment"
                :authorized="authorized"
                @comment-tap="onCommentTap"
              >
              </comment>
            </view>
            <loading :show="fetchingComments"></loading>
            <view v-show="noMoreComments" class="weui-loadmore weui-loadmore_line">
              <view class="weui-loadmore__tips weui-loadmore__tips_in-line">加载完毕</view>
            </view>
          </view>
        </scroll-view>
      </view>

      <authorized-check :authorized="authorized">
        <view class="form-wrap">
          <textarea
            class="textarea {{ systemInfo.platform }}__textarea"
            placeholder="写评论..."
            v-model="commentContent"
            :auto-height="true"
            :show-confirm-bar="false"
            :focus="textareaFocus"
            @focus="onTextareaFocus"
          >
          </textarea>
          <view v-show="!textareaFocus" class="form-actions-wrap">
            <view class="action message" @tap="anchorToggle">
              <badge
                v-if="article.cache.comments_count > 0"
                extClass="badge"
                :content="article.friendly_comments_count"
              >
              </badge>
              <image src="../../../static/png/message_81x81.png"></image>
            </view>
            <view class="action">
              <favorite-btn relation="article" :item="article"></favorite-btn>
            </view>
            <view class="action">
              <like-btn relation="article" :item="article" :hideText="true"></like-btn>
            </view>
          </view>

          <view v-show="textareaFocus" class="form-actions-wrap">
            <view
              class="action submit"
              :class="{disabled: commentContent.length <= 0}"
              @tap="submitComment"
            >
              发布
            </view>
          </view>
        </view>
      </authorized-check>
    </view>
  </view>
</template>

<script>
  import wepy from '@wepy/core';
  import unionBy from 'lodash/unionBy';
  import Debounce from 'lodash-decorators/debounce';
  import mapAuthState from '@/mixins/mapAuthState';
  import * as services from './services';

  const defaultArticleQueryParams = {
    include: 'tags',
    htmltowxml: 1,
    htmltowxml_linenums: 1,
  };

  const defaultCommentsQueryParams = {
    include: 'user',
    root_id: 0,
    htmltowxml: 1,
  };

  wepy.page({
    mixins: [mapAuthState],

    data: {
      systemInfo: {},
      id: 0,
      article: {},
      comments: [],
      meta: {
        current_page: 0,
      },
      commentContent: '',
      textareaFocus: false,
      fetchingArticle: false,
      fetchingComments: false,
      submittingComment: false,
      anchor: '',
      top_comment: 0,
    },

    computed: {
      articleUrl () {
        return `https://www.einsition.com/articles/${this.article.id}`;
      },

      noMoreComments () {
        return (
          this.meta.current_page >= 1 &&
          this.meta.current_page >= this.meta.last_page
        );
      },
    },

    methods: {
      async fetchArticle () {
        this.fetchingArticle = true;
        try {
          const { data: article } = await services.queryArticle(this.id, defaultArticleQueryParams);
          this.article = article;
        } finally {
          this.fetchingArticle = false;
        }
      },

      async fetchComments () {
        this.fetchingComments = true;

        try {
          const params = {
            ...defaultCommentsQueryParams,
          };

          if (this.top_comment) {
            params.top_comment = this.top_comment;
          }

          const { data: comments, meta } = await services.queryArticleComments(this.id, params);
          this.comments = comments;
          this.meta = meta;
        } finally {
          this.fetchingComments = false;
        }
      },

      @Debounce(200)
      async appendFetchComments () {
        if (this.fetchingComments || this.noMoreComments) return;

        this.fetchingComments = true;

        try {
          const { data: comments, meta } = await services.queryArticleComments(this.id, {
            ...defaultCommentsQueryParams,
            page: this.meta.current_page + 1,
          });
          this.comments = unionBy(this.comments.concat(comments), 'id');
          this.meta = meta;
        } finally {
          this.fetchingComments = false;
        }
      },

      @Debounce(600)
      async submitComment () {
        if (this.commentContent.length <= 0 || this.submittingComment) return;
        this.submittingComment = true;

        try {
          const { data: comment } = await services.postArticleComment(this.id, {
            ...defaultCommentsQueryParams,
            content: { markdown: this.commentContent },
          });
          this.comments = [comment].concat(this.comments);
          this.commentContent = '';

          this.onTextareaBlur();

          setTimeout(() => this.anchor = `comment-${comment.id}`, 0);

          wx.showToast({
            title: '评论成功！',
            icon: 'none',
          });
        } finally {
          this.submittingComment = false;
        }
      },

      onCommentTap (comment) {
        wx.navigateTo({ url: `/pages/articles/show/comment?article_id=${this.id}&comment_id=${comment.id}` });
      },

      anchorToggle () {
        this.anchor = this.anchor !== 'comments' ? 'comments' : 'content';
      },

      onTextareaFocus () {
        this.textareaFocus = true;
      },

      onTextareaBlur () {
        this.textareaFocus = false;
      },
    },

    created () {
      this.systemInfo = wx.getSystemInfoSync();
    },

    async onLoad ({ id, top_comment = 0 }) {
      this.id = Number(id);
      this.top_comment = Number(top_comment);

      const fetchArticlePromise = this.fetchArticle();
      const fetchCommentsPromise = this.fetchComments();

      await fetchArticlePromise;
      await fetchCommentsPromise;

      if (top_comment) {
        setTimeout(() => this.anchor = `comment-${top_comment}`, 0);
      }
    },
  });
</script>

<config>
  {
    usingComponents: {
      loading: '~@/components/weui/loading/loading',
      htmltowxml: '~@/components/html2wxml/html2wxml',
      'authorized-check': '~@/components/authorized-check',
      'like-btn': '~@/components/buttons/like-btn',
      'favorite-btn': '~@/components/buttons/favorite-btn',
      comment: '~@/components/comment',
      badge: '~@/components/weui/badge/badge',
    },
    navigationBarTitleText: '文章详情',
  }
</config>
